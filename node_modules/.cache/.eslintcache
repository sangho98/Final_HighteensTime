[{"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/index.js":"1","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/App.js":"2","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Footer.js":"3","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Login.js":"4","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/UserInfo.js":"5","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Main.js":"6","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Header.js":"7","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/NotFound.js":"8","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Logout.js":"9","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Register.js":"10","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/URL.js":"11","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/ApiConfig.js":"12","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/Apollo.js":"13","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Friend.js":"14","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Auth.js":"15","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Confirm.js":"16"},{"size":196,"mtime":1622549104000,"results":"17","hashOfConfig":"18"},{"size":2573,"mtime":1623076945145,"results":"19","hashOfConfig":"18"},{"size":339,"mtime":1622707773000,"results":"20","hashOfConfig":"18"},{"size":4416,"mtime":1622984758283,"results":"21","hashOfConfig":"18"},{"size":5682,"mtime":1622984384094,"results":"22","hashOfConfig":"18"},{"size":7844,"mtime":1622966703302,"results":"23","hashOfConfig":"18"},{"size":8140,"mtime":1623002292169,"results":"24","hashOfConfig":"18"},{"size":156,"mtime":1622530372000,"results":"25","hashOfConfig":"18"},{"size":168,"mtime":1622657603000,"results":"26","hashOfConfig":"18"},{"size":7886,"mtime":1622984519638,"results":"27","hashOfConfig":"18"},{"size":110,"mtime":1622813601000,"results":"28","hashOfConfig":"18"},{"size":4502,"mtime":1622971079912,"results":"29","hashOfConfig":"18"},{"size":166,"mtime":1622967694676,"results":"30","hashOfConfig":"18"},{"size":955,"mtime":1622966301225,"results":"31","hashOfConfig":"18"},{"size":193,"mtime":1623077508460,"results":"32","hashOfConfig":"18"},{"size":348,"mtime":1623077476270,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"13q3nmi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/index.js",[],["76","77"],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/App.js",["78","79","80","81","82"],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Footer.js",["83"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Col } from \"react-bootstrap\";\n\nfunction Footer() {\n  return (\n    <Col>\n      <p style={{ textAlign: \"center\", margin: \"1rem\" }}>\n        COPYRIGHT ⓒ 2021 HighteensTime ALL RIGHTS RESERVED. 출처: 배추추\n      </p>\n    </Col>\n  );\n}\n\nexport default Footer;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Login.js",["84","85","86","87","88","89","90"],"import React, { useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"../utils/URL\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Alert,\r\n  Tooltip,\r\n  OverlayTrigger,\r\n  Popover,\r\n  Overlay,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { messageAlram, tokenData } from \"../Apollo\";\r\n\r\nconst Test2 = (props) => {\r\n  return (\r\n    <Toast {...props}>\r\n      <Toast.Header>\r\n        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n        <strong className=\"mr-auto\">Bootstrap</strong>\r\n        <small>11 mins ago</small>\r\n      </Toast.Header>\r\n      <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [click, setClick] = React.useState(false);\r\n  const [LoginError, setLoginError] = React.useState(false);\r\n  const target = useRef(null);\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onClickLogin = () => {\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(SERVER_URL + \"/login\", data)\r\n      .then((res) => {\r\n        localStorage.setItem(\"TOKEN\", `Bearer ${res.data}`);\r\n        setLoginError(false);\r\n        tokenData(localStorage.getItem(\"TOKEN\"));\r\n        messageAlram(true);\r\n\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoginError(true);\r\n      });\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    // if(e.charCode === 13) { //  deprecated\r\n    //   this.handleClick();\r\n    // }\r\n\r\n    if (e.key === \"Enter\") {\r\n      onClickLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      className=\"justify-content-center align-self-center\"\r\n      style={{ height: \"600px\" }}\r\n    >\r\n      <Row\r\n        className=\"justify-content-md-center \"\r\n        style={{ marginTop: \"10rem\" }}\r\n      >\r\n        <Link to=\"/login\">\r\n          <h1 style={{ marginBottom: \"3rem\" }}>Highteens Time</h1>\r\n        </Link>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={5}>\r\n          <Form>\r\n            <Form.Group controlId=\"formHorizontalEmail\">\r\n              <Col>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  onChange={onChangeEmail}\r\n                  onKeyPress={handleKeyPress}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formHorizontalPassword\">\r\n              <Col>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  onChange={onChangePassword}\r\n                  onKeyPress={handleKeyPress}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Col>\r\n                <Button\r\n                  type=\"button\"\r\n                  style={{ width: \"100%\" }}\r\n                  onClick={() => {\r\n                    onClickLogin();\r\n                  }}\r\n                  ref={target}\r\n                >\r\n                  로그인\r\n                </Button>\r\n                <Overlay\r\n                  target={target.current}\r\n                  show={LoginError}\r\n                  placement=\"right\"\r\n                >\r\n                  {(props) => (\r\n                    <Tooltip id=\"overlay-example\" {...props}>\r\n                      로그인 오류!<br></br>\r\n                      <strong>이메일</strong> 또는 <strong>비밀번호</strong>를{\" \"}\r\n                      <br />\r\n                      확인해주세요.\r\n                    </Tooltip>\r\n                  )}\r\n                </Overlay>\r\n\r\n                <Button\r\n                  type=\"button\"\r\n                  style={{ width: \"100%\", marginTop: \"0.3rem\" }}\r\n                  onClick={() => {\r\n                    props.history.push(\"/register\");\r\n                  }}\r\n                >\r\n                  회원가입\r\n                </Button>\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/UserInfo.js",["91","92","93","94"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Overlay,\n  Tooltip,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport { tokenData } from \"../Apollo\";\nimport { GetUserInfo, PutUserInfo } from \"../utils/ApiConfig\";\n\nfunction UserInfo(props) {\n  const { data } = props;\n  const [userData, setUserData] = useState(null);\n  const [newNickname, setNewNickname] = useState(null);\n  const [newPassword, setNewPassword] = useState(null);\n  const [prevPassword, setPrevPassword] = useState(null);\n\n  const [correctPassword, setCorrectPassword] = useState(true);\n\n  const target = useRef(null);\n\n  useEffect(() => {\n    GetUserInfo({\n      data: tokenData(),\n      setUserData: setUserData,\n    });\n  }, []);\n  const onChangePrevPassword = (e) => {\n    setPrevPassword(e.target.value);\n  };\n  const onChangeNewPassword = (e) => {\n    setNewPassword(e.target.value);\n  };\n  const onChangeNewNickname = (e) => {\n    setNewNickname(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await PutUserInfo({\n      nickname: newNickname,\n      password: newPassword,\n    });\n  };\n\n  return (\n    <Container fluid>\n      <Row style={{ marginTop: \"2rem\" }}>\n        <Col\n          md={{ offset: 2, span: 8 }}\n          style={{ borderBottom: \"1px solid gray\" }}\n        >\n          <h1>마이 페이지</h1>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"2rem\" }}>\n        <Col md={{ offset: 2, span: 8 }}>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formPlaintextEmail\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  plaintext\n                  readOnly\n                  defaultValue={userData && userData.email}\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>이름</Form.Label>\n                <Form.Control\n                  plaintext\n                  readOnly\n                  defaultValue={userData && userData.username}\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>닉네임</Form.Label>\n                <Form.Control\n                  placeholder={`현재 닉네임 : ${userData && userData.nickname}`}\n                  onChange={onChangeNewNickname}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>현재 비밀번호</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"현재 비밀번호\"\n                  onChange={onChangePrevPassword}\n                  ref={target}\n                />\n              </Form.Group>\n              <Overlay\n                target={target.current}\n                show={correctPassword}\n                placement=\"top\"\n              >\n                {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                    이전 비밀번호와 일치하지 않습니다.\n                  </Tooltip>\n                )}\n              </Overlay>\n              <Overlay\n                target={target.current}\n                show={!correctPassword}\n                placement=\"top\"\n              >\n                {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                    이전 비밀번호와 일치합니다!\n                  </Tooltip>\n                )}\n              </Overlay>\n              <Form.Group as={Col} controlId=\"formGridPassword\">\n                <Form.Label>변경 비밀번호</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"변경할 비밀번호\"\n                  onChange={onChangeNewPassword}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label\n                  className=\"my-1 mr-2\"\n                  htmlFor=\"inlineFormCustomSelectPref\"\n                >\n                  지역\n                </Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  className=\"my-1 mr-sm-2\"\n                  id=\"inlineFormCustomSelectPref\"\n                  custom\n                >\n                  <option value=\"0\">\n                    현재 지역 : {userData && userData.region}\n                  </option>\n                  <option value=\"1\">서울</option>\n                  <option value=\"2\">인천</option>\n                  <option value=\"3\">익산</option>\n                  <option value=\"3\">정읍</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row as={Col}>\n              {!correctPassword && newNickname !== null ? (\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={(e) => {\n                    handleSubmit(e);\n                    window.location.href = \"/\";\n                  }}\n                >\n                  Submit\n                </Button>\n              ) : (\n                <Button\n                  disabled=\"true\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={() => {\n                    handleSubmit();\n                  }}\n                >\n                  Submit\n                </Button>\n              )}\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default UserInfo;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Main.js",["95","96","97","98","99"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Tab from \"react-bootstrap/Tab\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { GetArticle, GetUserInfo } from \"../utils/ApiConfig\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Jumbotron, Toast } from \"react-bootstrap\";\nimport { tokenData } from \"../Apollo\";\n\nconst ListArticle = (props) => {\n  const { article } = props;\n\n  return (\n    <Table bordered hover>\n      <thead>\n        <tr>\n          <th style={{ width: \"100%\", textAlign: \"center\" }}>제목</th>\n        </tr>\n      </thead>\n      <tbody>\n        {article &&\n          article.slice(0, 5).map((a) => {\n            return (\n              <tr key={a.id}>\n                <td style={{ textAlign: \"center\" }}>{a.title}</td>\n              </tr>\n            );\n          })}\n      </tbody>\n    </Table>\n  );\n};\n\nconst ControlledTabs = (props) => {\n  const [show, setShow] = React.useState(true);\n  const { article } = props;\n\n  return (\n    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n      <Row>\n        <Col sm={2}>\n          <Nav variant=\"pills\" className=\"flex-column\">\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"HotArticle\"\n                active={show === \"HotArticle\"}\n                onMouseEnter={() => setShow(\"HotArticle\")}\n                onMouseLeave={() => setShow(false)}\n                onClick={() => {\n                  props.props.history.push(`/post/${show}`);\n                }}\n              >\n                HOT 게시판\n              </Nav.Link>\n            </Nav.Item>\n\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"FreeArticle\"\n                active={show === \"FreeArticle\"}\n                onMouseEnter={() => setShow(\"FreeArticle\")}\n                onMouseLeave={() => setShow(false)}\n                onClick={() => {\n                  props.props.history.push(`/post/${show}`);\n                }}\n              >\n                자유 게시판\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"InfoArticle\"\n                active={show === \"InfoArticle\"}\n                onMouseEnter={() => setShow(\"InfoArticle\")}\n                onMouseLeave={() => setShow(false)}\n                onClick={() => {\n                  props.props.history.push(`/post/${show}`);\n                }}\n              >\n                정보 게시판\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"MatchingArticle\"\n                active={show === \"MatchingArticle\"}\n                onMouseEnter={() => setShow(\"MatchingArticle\")}\n                onMouseLeave={() => setShow(false)}\n                onClick={() => {\n                  props.props.history.push(`/post/${show}`);\n                }}\n              >\n                매칭 게시판\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                eventKey=\"AdvertiseArticle\"\n                active={show === \"AdvertiseArticle\"}\n                onMouseEnter={() => setShow(\"AdvertiseArticle\")}\n                onMouseLeave={() => setShow(false)}\n                onClick={() => {\n                  props.props.history.push(`/post/${show}`);\n                }}\n              >\n                홍보 게시판\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Col>\n        <Col sm={7}>\n          <Tab.Content>\n            <Tab.Pane eventKey=\"HotArticle\" active={show === \"HotArticle\"}>\n              <ListArticle data={article} />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"FreeArticle\" active={show === \"FreeArticle\"}>\n              <ListArticle data={article} />\n            </Tab.Pane>\n            <Tab.Pane eventKey=\"InfoArticle\" active={show === \"InfoArticle\"}>\n              <ListArticle data={article} />\n            </Tab.Pane>\n            <Tab.Pane\n              eventKey=\"MatchingArticle\"\n              active={show === \"MatchingArticle\"}\n            >\n              <ListArticle data={article} />\n            </Tab.Pane>\n            <Tab.Pane\n              eventKey=\"AdvertiseArticle\"\n              active={show === \"AdvertiseArticle\"}\n            >\n              <ListArticle data={article} />\n            </Tab.Pane>\n          </Tab.Content>\n        </Col>\n        <Col sm={3}>\n          <Alert variant=\"dark\">\n            <Alert.Heading>업데이트 중..</Alert.Heading>\n            <p>2021-06-03 메인페이지 작업 완료</p>\n            <hr />\n            <p className=\"mb-0\">추가 기능 구현중..</p>\n          </Alert>\n        </Col>\n      </Row>\n    </Tab.Container>\n  );\n};\n\nconst ControlledUserInfo = (props) => {\n  const { userData, prop } = props;\n  return (\n    <Container>\n      <Card style={{ width: \"100%\" }} className=\"text-center\">\n        <Image\n          variant=\"top\"\n          src=\"./test.png\"\n          style={{ maxWidth: \"13rem\", padding: \"15px\" }}\n          roundedCircle\n          className=\"mx-auto\"\n        />\n\n        <Card.Body>\n          <Card.Title>{userData ? userData.nickname : \"Null\"}</Card.Title>\n          <Card.Text>{userData ? userData.username : \"Null\"}</Card.Text>\n          <Link to=\"/user\">\n            <Button style={{ margin: \"10px\" }}>내 정보</Button>\n          </Link>\n\n          <Button\n            onClick={() => {\n              localStorage.removeItem(\"TOKEN\");\n              tokenData(null);\n              prop.history.push(\"/login\");\n            }}\n          >\n            로그아웃\n          </Button>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem>\n            <Card.Link href=\"#\">내가 쓴 글</Card.Link>\n          </ListGroupItem>\n          <ListGroupItem>\n            <Card.Link href=\"#\">댓글 단 글</Card.Link>\n          </ListGroupItem>\n        </ListGroup>\n      </Card>\n    </Container>\n  );\n};\n\nfunction Main(props) {\n  const [article, setArticle] = useState(null);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    if (!tokenData()) props.history.push(\"/login\");\n  });\n  useEffect(() => {\n    if (tokenData()) {\n      GetUserInfo({ data: tokenData(), setUserData: setUserData });\n      GetArticle({ data: tokenData(), setArticle: setArticle });\n    }\n  }, []);\n\n  return (\n    <Container fluid>\n      <Col md={12} style={{ marginTop: \"1.5rem\" }}>\n        <Row>\n          <Col md={9}>\n            <Jumbotron>\n              <h1>Highteens Time 공사중..</h1>\n              <p>팀명 : 배추추</p>\n              <p>팀원 : 배서현, 박상호, 황선형</p>\n              <p>\n                <Link to=\"/notice\">\n                  <Button variant=\"primary\">공지사항 확인</Button>\n                </Link>\n              </p>\n            </Jumbotron>\n          </Col>\n          <Col md={3}>\n            <ControlledUserInfo userData={userData} prop={props} />\n          </Col>\n        </Row>\n\n        <Row style={{ marginTop: \"1.5rem\" }}>\n          <Container style={{ height: \"300px\" }} fluid>\n            <ControlledTabs props={props} article={article} />\n          </Container>\n        </Row>\n      </Col>\n    </Container>\n  );\n}\n\nexport default Main;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Header.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCommentDots,\n  faPowerOff,\n  faUserFriends,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Table from \"react-bootstrap/Table\";\nimport { GetMessage, SendMessage } from \"../utils/ApiConfig\";\nimport { Col } from \"react-bootstrap\";\nimport Logout from \"../screens/Logout\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Overlay, Tooltip, Toast } from \"react-bootstrap\";\nimport { messageAlram, tokenData } from \"../Apollo\";\nimport Friend from \"./Friend\";\n\nconst Headalign = styled.div`\n  width: 100%;\n  height: 60px;\n`;\n\nconst ListMessage = (props) => {\n  const { message, pageNum, pageNumEnd, setTypeModal, setMessageId } = props;\n\n  return (\n    <Table bordered hover>\n      <thead>\n        <tr>\n          <th style={{ textAlign: \"center\" }}>번호</th>\n          <th style={{ width: \"93%\", textAlign: \"center\" }}>제목</th>\n        </tr>\n      </thead>\n      <tbody>\n        {message.slice(pageNum, pageNumEnd).map((m) => {\n          return (\n            <tr key={m.id}>\n              <td style={{ textAlign: \"center\" }}>{m.id}</td>\n\n              <td\n                style={{ textAlign: \"center\" }}\n                onClick={() => {\n                  setTypeModal(\"2\");\n                  setMessageId(m.id);\n                }}\n              >\n                {m.title}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nconst MessageDetail = (props) => {\n  const { message, setTypeModal, messageId } = props;\n  return (\n    <Table bordered hover>\n      <thead>\n        {message.map((m) => {\n          if (m.id === messageId) {\n            return (\n              <tr>\n                <th style={{ width: \"10%\", textAlign: \"center\" }}>제목</th>\n                <td style={{ width: \"90%\", textAlign: \"center\" }}>{m.title}</td>\n              </tr>\n            );\n          }\n        })}\n      </thead>\n      <tbody>\n        {message.map((m) => {\n          if (m.id === messageId) {\n            return (\n              <tr key={m.id}>\n                <th style={{ textAlign: \"center\" }}>내용</th>\n\n                <td style={{ textAlign: \"center\" }}>{m.content}</td>\n              </tr>\n            );\n          }\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nconst Test = (props) => {\n  const {\n    data,\n    message,\n    setCount,\n    setModalShow,\n    typeModal,\n    setTypeModal,\n    pageNum,\n    pageNumEnd,\n    setMessageId,\n    messageId,\n  } = props;\n\n  if (typeModal === \"1\") {\n    return (\n      <ListMessage\n        message={message}\n        pageNum={pageNum}\n        pageNumEnd={pageNumEnd}\n        setTypeModal={setTypeModal}\n        setMessageId={setMessageId}\n      />\n    );\n  } else if (typeModal === \"2\") {\n    return <MessageDetail message={message} messageId={messageId} />;\n  }\n};\n\nconst MessageShow = (props) => {\n  const {\n    data,\n    message,\n    setCount,\n    setModalShow,\n    typeModal,\n    setTypeModal,\n    prop,\n  } = props;\n  const [pageNum, setPageNum] = useState(0);\n  const [pageNumEnd, setPageNumEnd] = useState(5);\n  const [show, setShow] = useState(true);\n  const [messageId, setMessageId] = useState(null);\n  const target = useRef(null);\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        {typeModal === \"1\" || typeModal === \"2\" ? (\n          <Modal.Title id=\"contained-modal-title-vcenter\">쪽지함</Modal.Title>\n        ) : (\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            친구 목록\n          </Modal.Title>\n        )}\n      </Modal.Header>\n      <Modal.Body>\n        {typeModal === \"1\" || typeModal === \"2\" ? (\n          <Test\n            message={message}\n            pageNum={pageNum}\n            pageNumEnd={pageNumEnd}\n            setTypeModal={setTypeModal}\n            setMessageId={setMessageId}\n            messageId={messageId}\n            typeModal={typeModal}\n            data={data}\n          />\n        ) : (\n          <Friend prop={prop} />\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        {typeModal === \"1\" ? (\n          <Button\n            onClick={() => {\n              if (pageNum <= 0) {\n                setShow(!show);\n              } else {\n                setShow(false);\n                setPageNum(pageNum - 5);\n                setPageNumEnd(pageNumEnd - 5);\n              }\n            }}\n          >\n            Prev\n          </Button>\n        ) : null}\n        {typeModal === \"1\" ? (\n          <Button\n            onClick={() => {\n              setPageNum(pageNum + 5);\n              setPageNumEnd(pageNumEnd + 5);\n              setShow(!show);\n            }}\n          >\n            Next\n          </Button>\n        ) : null}\n\n        <Button\n          onClick={() => {\n            setModalShow(false);\n            setCount(false);\n          }}\n        >\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nfunction Header(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [message, setMessage] = useState(null);\n  const [count, setCount] = useState(false);\n  const [show, setShow] = useState(false);\n  const [typeModal, setTypeModal] = useState(true);\n  const target = useRef(null);\n  const [successLogin, setSuccessLogin] = useState(false);\n\n  const data = tokenData();\n\n  if (modalShow && !count) {\n    GetMessage({ data: data, setMessage: setMessage });\n    if (message) {\n      setCount(true);\n    }\n  }\n\n  if (\n    props.history.location.pathname === \"/login\" ||\n    props.history.location.pathname === \"/register\"\n  ) {\n    return null;\n  } else {\n    return (\n      <Headalign>\n        <clientSet></clientSet>\n        {modalShow && message ? (\n          <MessageShow\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n            data={data}\n            message={message}\n            typeModal={typeModal}\n            setCount={setCount}\n            setModalShow={setModalShow}\n            setTypeModal={setTypeModal}\n            prop={props}\n          ></MessageShow>\n        ) : null}\n\n        <Navbar bg=\"secondary\" variant=\"dark\" style={{ height: \"60px\" }}>\n          <Link to=\"/\">\n            <Navbar.Brand>Highteens Time</Navbar.Brand>\n          </Link>\n          <Nav className=\"mr-auto\"></Nav>\n\n          <Nav>\n            <FontAwesomeIcon\n              icon={faUserFriends}\n              style={{ paddingRight: \"13px\" }}\n              color=\"white\"\n              size=\"2x\"\n              onClick={() => {\n                setTypeModal(\"3\");\n                setModalShow(true);\n              }}\n            ></FontAwesomeIcon>\n\n            <FontAwesomeIcon\n              icon={faCommentDots}\n              style={{ paddingRight: \"13px\" }}\n              color=\"white\"\n              size=\"2x\"\n              onClick={() => {\n                setTypeModal(\"1\");\n                setModalShow(true);\n              }}\n            ></FontAwesomeIcon>\n\n            <Link to=\"/login\">\n              <FontAwesomeIcon\n                icon={faPowerOff}\n                style={{ paddingRight: \"13px\" }}\n                color=\"white\"\n                size=\"2x\"\n                onClick={() => {\n                  localStorage.removeItem(\"TOKEN\");\n                }}\n              ></FontAwesomeIcon>\n            </Link>\n\n            <Form inline>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n              />\n              <Button variant=\"outline-light\">검색</Button>\n            </Form>\n          </Nav>\n        </Navbar>\n      </Headalign>\n    );\n  }\n}\n\nexport default Header;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/NotFound.js",["121"],"import { isLoggedInVar } from \"../Apollo\";\nimport React from \"react\";\n\nfunction NotFound() {\n  return <div>Not Found 404</div>;\n}\n\nexport default NotFound;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Logout.js",["122","123","124"],"import react from \"react\";\nimport { Redirect, useHistory } from \"react-router\";\n\nfunction Logout(props) {\n  localStorage.removeItem(\"TOKEN\");\n}\n\nexport default Logout;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Register.js",["125","126","127","128","129","130","131"],"import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../utils/URL\";\nimport {\n  Button,\n  Form,\n  Row,\n  Col,\n  Container,\n  Alert,\n  Tooltip,\n  OverlayTrigger,\n  Popover,\n  Overlay,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport {\n  PostCheckEmail,\n  PostCheckNickname,\n  PostRegister,\n} from \"../utils/ApiConfig\";\nimport { Link } from \"react-router-dom\";\n\nfunction Register(props) {\n  const [emailFront, setEmailFront] = useState(null);\n  const [emailBack, setEmailBack] = useState(null);\n  const [emailFull, setEmailFull] = useState(null);\n\n  const [password, setPassword] = useState(null);\n\n  const [username, setUsername] = useState(null);\n  const [nickname, setNickname] = useState(null);\n\n  const [region, setRegion] = useState(null);\n  const [resResult, setResResult] = useState(false);\n\n  const [duplicateNick, setDuplicateNick] = useState(false);\n  const [duplicateEmail, setDuplicateEmail] = useState(false);\n\n  const target = useRef(null);\n  const target2 = useRef(null);\n\n  useEffect(() => {\n    setEmailFull(`${emailFront}@${emailBack}`);\n  }, [emailFront, emailBack]);\n\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const onChangeNickname = (e) => {\n    setNickname(e.target.value);\n  };\n\n  const onChangeEmailFront = (e) => {\n    setEmailFront(e.target.value);\n  };\n\n  const onChangeEmailBack = (e) => {\n    setEmailBack(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangeRegion = (e) => {\n    switch (e.target.value) {\n      case \"서울\":\n        setRegion(\"Seoul\");\n        break;\n      case \"인천\":\n        setRegion(\"Incheon\");\n        break;\n      case \"정읍\":\n        setRegion(\"Jeongeup\");\n        break;\n      case \"익산\":\n        setRegion(\"Iksan\");\n        break;\n    }\n  };\n\n  return (\n    <Container style={{ height: \"600px\" }} fluid>\n      <Row style={{ marginTop: \"3rem\" }} className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <Link to=\"/register\">\n            <h1 style={{ marginBottom: \"3rem\" }}>Highteens Time</h1>\n          </Link>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center\">\n        <Form style={{ width: \"33%\" }}>\n          <Form.Row>\n            <Col md={4}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"이름\"\n                onChange={onChangeUsername}\n              />\n            </Col>\n            <Col md={5}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"닉네임\"\n                onChange={onChangeNickname}\n              />\n            </Col>\n            <Col>\n              <Button\n                style={{ width: \"100%\" }}\n                onClick={() => {\n                  PostCheckNickname({\n                    nickname: nickname,\n                    setDuplicateNick: setDuplicateNick,\n                  });\n                }}\n                ref={target}\n              >\n                닉네임 확인\n              </Button>\n              <Overlay\n                target={target.current}\n                show={duplicateNick}\n                placement=\"right\"\n              >\n                {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                    닉네임 오류!<br></br>\n                    <strong>닉네임</strong> 이 중복됩니다.\n                  </Tooltip>\n                )}\n              </Overlay>\n            </Col>\n          </Form.Row>\n          <Form.Row style={{ marginTop: \"0.5rem\" }}>\n            <Col md={4}>\n              <Form.Label htmlFor=\"inlineFormInput\" srOnly>\n                Name\n              </Form.Label>\n              <Form.Control\n                className=\"mb-2\"\n                id=\"inlineFormInput\"\n                placeholder=\"example\"\n                onChange={onChangeEmailFront}\n              />\n            </Col>\n            <Col md={5}>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>@</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  id=\"inlineFormInputGroup\"\n                  placeholder=\"example.com\"\n                  onChange={onChangeEmailBack}\n                />\n              </InputGroup>\n            </Col>\n\n            <Col md={3}>\n              <Button\n                type=\"button\"\n                className=\"mb-2\"\n                style={{ width: \"100%\" }}\n                onClick={() => {\n                  console.log(`send Email: ${emailFull}`);\n                  PostCheckEmail({\n                    email: emailFull,\n                    setDuplicateEmail: setDuplicateEmail,\n                  });\n                }}\n                ref={target2}\n              >\n                이메일 확인\n              </Button>\n              <Overlay\n                target={target2.current}\n                show={duplicateEmail}\n                placement=\"right\"\n              >\n                {(props) => (\n                  <Tooltip id=\"overlay-example\" {...props}>\n                    이메일 오류!<br></br>\n                    <strong>이메일</strong> 이 중복됩니다.\n                  </Tooltip>\n                )}\n              </Overlay>\n            </Col>\n          </Form.Row>\n          <Form.Row style={{ marginTop: \"0.0rem\" }}>\n            <Col>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                onChange={onChangePassword}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Row style={{ marginTop: \"0.5rem\" }}>\n            <Col>\n              <Form.Control\n                as=\"select\"\n                defaultValue=\"Choose...\"\n                onChange={onChangeRegion}\n              >\n                <option>지역 선택</option>\n                <option>서울</option>\n                <option>인천</option>\n                <option>정읍</option>\n                <option>익산</option>\n              </Form.Control>\n            </Col>\n          </Form.Row>\n          <Form.Row style={{ marginTop: \"0.3rem\" }}>\n            <Col>\n              <Button\n                type=\"button\"\n                style={{ width: \"100%\" }}\n                onClick={() => {\n                  props.history.goBack();\n                }}\n              >\n                이전 단계\n              </Button>\n            </Col>\n          </Form.Row>\n\n          <Form.Row style={{ marginTop: \"0.3rem\" }}>\n            <Col>\n              <Button\n                type=\"button\"\n                style={{ width: \"100%\", marginTop: \"0.3rem\" }}\n                onClick={() => {\n                  if (duplicateNick || duplicateEmail) {\n                    // 회원가입 막기\n                    return;\n                  }\n\n                  if (\n                    emailFront === null ||\n                    emailBack === null ||\n                    password === null ||\n                    username === null ||\n                    region === null\n                  ) {\n                    console.log(\"No Input\");\n                    return;\n                  }\n                  const regData = {\n                    email: emailFull,\n                    password: password,\n                    username: username,\n                    nickname: nickname,\n                    region: region,\n                  };\n                  console.log(`regData : ${regData}`);\n\n                  PostRegister({ data: regData, setResResult: setResResult });\n\n                  props.history.push(\"/login\");\n                }}\n              >\n                회원가입\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Register;\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/URL.js",[],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/ApiConfig.js",["132","133","134","135","136","137"],"import axios from \"axios\";\nimport { tokenData } from \"../Apollo\";\nimport { SERVER_URL } from \"./URL\";\n\nexport const client = axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"TOKEN\"),\n  },\n});\n\nexport const clientSet = (axios.defaults.headers.common[\"Authorization\"] =\n  localStorage.getItem(\"TOKEN\"));\n\nexport const GetMessage = (props) => {\n  const { setMessage } = props;\n  axios\n    .get(SERVER_URL + \"/message/received\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then(\n      (res) => {\n        setMessage(res.data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const SendMessage = (props) => {\n  const { data, setMessage, email } = props;\n  axios\n    .post(SERVER_URL + `/message/${email}`, data)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const GetArticle = async (props) => {\n  const { data, setArticle } = props;\n\n  await axios\n    .get(SERVER_URL + \"/post/neople\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then((res) => {\n      setArticle(res.data);\n      console.log(res.data);\n    })\n    .catch((err) => {\n      console.log(\"hi\");\n      console.log(err);\n    });\n};\n\nexport const GetUserInfo = async (props) => {\n  const { data, setUserData } = props;\n\n  await axios\n    .get(SERVER_URL + \"/user\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then((res) => {\n      setUserData(res.data);\n      console.log(res.data);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const PutUserInfo = (props) => {\n  const { nickname, password } = props;\n\n  const formData = new FormData();\n  formData.append(\"nickname\", nickname);\n  formData.append(\"password\", password);\n\n  console.log(formData);\n\n  axios\n    .put(SERVER_URL + \"/user\", formData)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const PostWriteArticle = (props) => {\n  const { data, articleData } = props;\n\n  const multiform = new FormData();\n\n  axios.post(SERVER_URL + \"/post/nexon\", articleData).then(\n    ((res) => {\n      //success\n    },\n    (err) => {\n      //faile\n    })\n  );\n};\n\nexport const PostCheckEmail = (props) => {\n  const { email, setDuplicateEmail } = props;\n\n  const form = new FormData();\n  form.append(\"email\", email);\n\n  axios\n    .post(SERVER_URL + \"/join/email\", form)\n    .then((res) => {\n      //success\n      setDuplicateEmail(false);\n    })\n    .catch((err) => {\n      //console.log(err);\n      setDuplicateEmail(true);\n    });\n};\n\nexport const PostCheckNickname = (props) => {\n  const { nickname, setDuplicateNick } = props;\n\n  const form = new FormData();\n  form.append(\"nickname\", nickname);\n\n  console.log(nickname);\n\n  axios\n    .post(SERVER_URL + \"/join/nickname\", form)\n    .then((res) => {\n      //success\n      console.log(res);\n      setDuplicateNick(false);\n    })\n    .catch((err) => {\n      //console.log(err);\n      console.log(err);\n      setDuplicateNick(true);\n    });\n};\n\nexport const PostRegister = (props) => {\n  const { data, setResResult } = props;\n\n  const json = JSON.stringify({\n    username: data.username,\n    nickname: data.nickname,\n    password: data.password,\n    email: data.email,\n    region: data.region,\n  });\n  console.log(json);\n  axios\n    .post(SERVER_URL + \"/join\", json, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) => {\n      //success\n      console.log(res);\n\n      setResResult(true);\n      localStorage.setItem(\"TOKEN\", `Bearer ${res.data}`);\n      tokenData(localStorage.getItem(\"TOKEN\"));\n    })\n    .catch((err) => {\n      //console.log(err);\n      setResResult(false);\n    });\n};\n\nexport const GetFriendList = async (props) => {\n  const { data, setFriendList } = props;\n\n  await axios\n    .get(SERVER_URL + \"/user/friends\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then((res) => {\n      setFriendList(res);\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const GetFriendFollowList = async (props) => {\n  const { setFriendFollowList } = props;\n\n  await axios\n    .get(SERVER_URL + \"/user/followers\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then((res) => {\n      setFriendFollowList(res);\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n","/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/Apollo.js",[],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/component/Friend.js",[],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Auth.js",[],"/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/screens/Confirm.js",["138","139","140","141","142"],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":3,"column":3,"nodeType":"149","messageId":"150","endLine":3,"endColumn":11},{"ruleId":"147","severity":1,"message":"151","line":17,"column":17,"nodeType":"149","messageId":"150","endLine":17,"endColumn":25},{"ruleId":"147","severity":1,"message":"152","line":19,"column":18,"nodeType":"149","messageId":"150","endLine":19,"endColumn":27},{"ruleId":"147","severity":1,"message":"153","line":20,"column":26,"nodeType":"149","messageId":"150","endLine":20,"endColumn":29},{"ruleId":"147","severity":1,"message":"154","line":22,"column":10,"nodeType":"149","messageId":"150","endLine":22,"endColumn":24},{"ruleId":"147","severity":1,"message":"155","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"157","line":10,"column":3,"nodeType":"149","messageId":"150","endLine":10,"endColumn":8},{"ruleId":"147","severity":1,"message":"158","line":12,"column":3,"nodeType":"149","messageId":"150","endLine":12,"endColumn":17},{"ruleId":"147","severity":1,"message":"159","line":13,"column":3,"nodeType":"149","messageId":"150","endLine":13,"endColumn":10},{"ruleId":"147","severity":1,"message":"160","line":20,"column":7,"nodeType":"149","messageId":"150","endLine":20,"endColumn":12},{"ruleId":"147","severity":1,"message":"161","line":36,"column":10,"nodeType":"149","messageId":"150","endLine":36,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":36,"column":17,"nodeType":"149","messageId":"150","endLine":36,"endColumn":25},{"ruleId":"147","severity":1,"message":"158","line":10,"column":3,"nodeType":"149","messageId":"150","endLine":10,"endColumn":17},{"ruleId":"147","severity":1,"message":"163","line":16,"column":11,"nodeType":"149","messageId":"150","endLine":16,"endColumn":15},{"ruleId":"147","severity":1,"message":"164","line":20,"column":10,"nodeType":"149","messageId":"150","endLine":20,"endColumn":22},{"ruleId":"147","severity":1,"message":"165","line":22,"column":27,"nodeType":"149","messageId":"150","endLine":22,"endColumn":45},{"ruleId":"147","severity":1,"message":"166","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":34},{"ruleId":"147","severity":1,"message":"155","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"167","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},{"ruleId":"147","severity":1,"message":"168","line":15,"column":10,"nodeType":"149","messageId":"150","endLine":15,"endColumn":23},{"ruleId":"147","severity":1,"message":"169","line":20,"column":21,"nodeType":"149","messageId":"150","endLine":20,"endColumn":26},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"170","line":18,"column":22,"nodeType":"149","messageId":"150","endLine":18,"endColumn":33},{"ruleId":"147","severity":1,"message":"153","line":19,"column":10,"nodeType":"149","messageId":"150","endLine":19,"endColumn":13},{"ruleId":"147","severity":1,"message":"171","line":20,"column":8,"nodeType":"149","messageId":"150","endLine":20,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":21,"column":8,"nodeType":"149","messageId":"150","endLine":21,"endColumn":13},{"ruleId":"147","severity":1,"message":"172","line":22,"column":10,"nodeType":"149","messageId":"150","endLine":22,"endColumn":17},{"ruleId":"147","severity":1,"message":"173","line":22,"column":19,"nodeType":"149","messageId":"150","endLine":22,"endColumn":26},{"ruleId":"147","severity":1,"message":"169","line":22,"column":28,"nodeType":"149","messageId":"150","endLine":22,"endColumn":33},{"ruleId":"147","severity":1,"message":"174","line":23,"column":10,"nodeType":"149","messageId":"150","endLine":23,"endColumn":22},{"ruleId":"147","severity":1,"message":"175","line":66,"column":20,"nodeType":"149","messageId":"150","endLine":66,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":70,"column":26,"nodeType":"178","messageId":"179","endLine":70,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":82,"column":26,"nodeType":"178","messageId":"179","endLine":82,"endColumn":28},{"ruleId":"147","severity":1,"message":"163","line":100,"column":5,"nodeType":"149","messageId":"150","endLine":100,"endColumn":9},{"ruleId":"147","severity":1,"message":"180","line":102,"column":5,"nodeType":"149","messageId":"150","endLine":102,"endColumn":13},{"ruleId":"147","severity":1,"message":"181","line":103,"column":5,"nodeType":"149","messageId":"150","endLine":103,"endColumn":17},{"ruleId":"147","severity":1,"message":"182","line":141,"column":9,"nodeType":"149","messageId":"150","endLine":141,"endColumn":15},{"ruleId":"147","severity":1,"message":"183","line":220,"column":10,"nodeType":"149","messageId":"150","endLine":220,"endColumn":14},{"ruleId":"147","severity":1,"message":"184","line":220,"column":16,"nodeType":"149","messageId":"150","endLine":220,"endColumn":23},{"ruleId":"147","severity":1,"message":"182","line":222,"column":9,"nodeType":"149","messageId":"150","endLine":222,"endColumn":15},{"ruleId":"147","severity":1,"message":"185","line":223,"column":10,"nodeType":"149","messageId":"150","endLine":223,"endColumn":22},{"ruleId":"147","severity":1,"message":"186","line":223,"column":24,"nodeType":"149","messageId":"150","endLine":223,"endColumn":39},{"ruleId":"147","severity":1,"message":"187","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":23},{"ruleId":"147","severity":1,"message":"188","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":18},{"ruleId":"147","severity":1,"message":"189","line":2,"column":20,"nodeType":"149","messageId":"150","endLine":2,"endColumn":30},{"ruleId":"147","severity":1,"message":"190","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"147","severity":1,"message":"191","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"157","line":10,"column":3,"nodeType":"149","messageId":"150","endLine":10,"endColumn":8},{"ruleId":"147","severity":1,"message":"158","line":12,"column":3,"nodeType":"149","messageId":"150","endLine":12,"endColumn":17},{"ruleId":"147","severity":1,"message":"159","line":13,"column":3,"nodeType":"149","messageId":"150","endLine":13,"endColumn":10},{"ruleId":"147","severity":1,"message":"192","line":36,"column":10,"nodeType":"149","messageId":"150","endLine":36,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":69,"column":5,"nodeType":"195","messageId":"196","endLine":82,"endColumn":6},{"ruleId":"147","severity":1,"message":"197","line":33,"column":17,"nodeType":"149","messageId":"150","endLine":33,"endColumn":27},{"ruleId":"147","severity":1,"message":"163","line":45,"column":11,"nodeType":"149","messageId":"150","endLine":45,"endColumn":15},{"ruleId":"147","severity":1,"message":"163","line":64,"column":11,"nodeType":"149","messageId":"150","endLine":64,"endColumn":15},{"ruleId":"147","severity":1,"message":"163","line":101,"column":11,"nodeType":"149","messageId":"150","endLine":101,"endColumn":15},{"ruleId":"147","severity":1,"message":"198","line":103,"column":9,"nodeType":"149","messageId":"150","endLine":103,"endColumn":18},{"ruleId":"147","severity":1,"message":"163","line":187,"column":11,"nodeType":"149","messageId":"150","endLine":187,"endColumn":15},{"ruleId":"147","severity":1,"message":"188","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"156","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"151","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"199","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":25},{"ruleId":"147","severity":1,"message":"200","line":8,"column":9,"nodeType":"149","messageId":"150","endLine":8,"endColumn":15},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'clientSet' is defined but never used.","'Col' is defined but never used.","'useReactiveVar' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'Alert' is defined but never used.","'OverlayTrigger' is defined but never used.","'Popover' is defined but never used.","'Test2' is assigned a value but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'data' is assigned a value but never used.","'prevPassword' is assigned a value but never used.","'setCorrectPassword' is assigned a value but never used.","'useRef' is defined but never used.","'Carousel' is defined but never used.","'LinkContainer' is defined but never used.","'Toast' is defined but never used.","'SendMessage' is defined but never used.","'Logout' is defined but never used.","'Overlay' is defined but never used.","'Tooltip' is defined but never used.","'messageAlram' is defined but never used.","'setTypeModal' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setCount' is assigned a value but never used.","'setModalShow' is assigned a value but never used.","'target' is assigned a value but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'successLogin' is assigned a value but never used.","'setSuccessLogin' is assigned a value but never used.","'isLoggedInVar' is defined but never used.","'react' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'SERVER_URL' is defined but never used.","'resResult' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setMessage' is assigned a value but never used.","'multiform' is assigned a value but never used.","'GetConfirmEmail' is defined but never used.","'tokenD' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]