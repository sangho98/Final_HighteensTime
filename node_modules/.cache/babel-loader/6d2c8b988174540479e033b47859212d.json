{"ast":null,"code":"import axios from \"axios\";\nimport { tokenData } from \"../Apollo\";\nimport { SERVER_URL } from \"./URL\";\nexport const client = axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"TOKEN\")\n  }\n});\nexport const clientSet = axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"TOKEN\");\nexport const GetMessage = props => {\n  const {\n    setMessage\n  } = props;\n  axios.get(SERVER_URL + \"/message/received\", {\n    headers: {\n      Authorization: tokenData()\n    }\n  }).then(res => {\n    setMessage(res.data);\n  }, err => {\n    console.log(err);\n  });\n};\n_c = GetMessage;\nexport const SendMessage = props => {\n  const {\n    data,\n    setMessage,\n    email\n  } = props;\n  axios.post(SERVER_URL + `/message/${email}`, data).then(res => {}).catch(err => {\n    console.log(err);\n  });\n};\n_c2 = SendMessage;\nexport const GetArticle = async props => {\n  const {\n    data,\n    setArticle\n  } = props;\n  await axios.get(SERVER_URL + \"/post/neople\", {\n    headers: {\n      Authorization: tokenData()\n    }\n  }).then(res => {\n    setArticle(res.data);\n    console.log(res.data);\n  }, err => {\n    console.log(\"hi\");\n    console.log(err);\n  });\n};\n_c3 = GetArticle;\nexport const GetUserInfo = async props => {\n  const {\n    data,\n    setUserData\n  } = props;\n  await axios.get(SERVER_URL + \"/user\", {\n    headers: {\n      Authorization: tokenData()\n    }\n  }).then(res => {\n    setUserData(res.data);\n    console.log(res.data);\n  }, err => {\n    console.log(err);\n  });\n};\n_c4 = GetUserInfo;\nexport const PutUserInfo = props => {\n  const {\n    nickname,\n    password\n  } = props;\n  const formData = new FormData();\n  formData.append(\"nickname\", nickname);\n  formData.append(\"password\", password);\n  console.log(formData);\n  axios.put(SERVER_URL + \"/user\", formData).then(res => {\n    console.log(res);\n  }, err => {\n    console.log(err);\n  });\n};\n_c5 = PutUserInfo;\nexport const PostWriteArticle = props => {\n  const {\n    data,\n    articleData\n  } = props;\n  const multiform = new FormData();\n  axios.post(SERVER_URL + \"/post/nexon\", articleData).then((res => {//success\n  }, err => {//faile\n  }));\n};\n_c6 = PostWriteArticle;\nexport const PostCheckEmail = props => {\n  const {\n    email,\n    setDuplicateEmail\n  } = props;\n  const form = new FormData();\n  form.append(\"email\", email);\n  axios.post(SERVER_URL + \"/join/email\", form).then(res => {\n    //success\n    setDuplicateEmail(false);\n  }).catch(err => {\n    //console.log(err);\n    setDuplicateEmail(true);\n  });\n};\n_c7 = PostCheckEmail;\nexport const PostCheckNickname = props => {\n  const {\n    nickname,\n    setDuplicateNick\n  } = props;\n  const form = new FormData();\n  form.append(\"nickname\", nickname);\n  axios.post(SERVER_URL + \"/join/nickname\", form).then(res => {\n    //success\n    setDuplicateNick(false);\n  }).catch(err => {\n    //console.log(err);\n    setDuplicateNick(true);\n  });\n};\n_c8 = PostCheckNickname;\nexport const PostRegister = props => {\n  const {\n    data,\n    setResResult\n  } = props;\n  const json = JSON.stringify({\n    username: data.username,\n    nickname: data.nickname,\n    password: data.password,\n    email: data.email,\n    region: data.region\n  });\n  console.log(json);\n  axios.post(SERVER_URL + \"/join\", json, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    //success\n    setResResult(true);\n  }).catch(err => {\n    //console.log(err);\n    setResResult(false);\n  });\n};\n_c9 = PostRegister;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"GetMessage\");\n$RefreshReg$(_c2, \"SendMessage\");\n$RefreshReg$(_c3, \"GetArticle\");\n$RefreshReg$(_c4, \"GetUserInfo\");\n$RefreshReg$(_c5, \"PutUserInfo\");\n$RefreshReg$(_c6, \"PostWriteArticle\");\n$RefreshReg$(_c7, \"PostCheckEmail\");\n$RefreshReg$(_c8, \"PostCheckNickname\");\n$RefreshReg$(_c9, \"PostRegister\");","map":{"version":3,"sources":["/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/ApiConfig.js"],"names":["axios","tokenData","SERVER_URL","client","create","headers","Authorization","localStorage","getItem","clientSet","defaults","common","GetMessage","props","setMessage","get","then","res","data","err","console","log","SendMessage","email","post","catch","GetArticle","setArticle","GetUserInfo","setUserData","PutUserInfo","nickname","password","formData","FormData","append","put","PostWriteArticle","articleData","multiform","PostCheckEmail","setDuplicateEmail","form","PostCheckNickname","setDuplicateNick","PostRegister","setResResult","json","JSON","stringify","username","region"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { tokenData } from \"../Apollo\";\nimport { SERVER_URL } from \"./URL\";\n\nexport const client = axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"TOKEN\"),\n  },\n});\n\nexport const clientSet = (axios.defaults.headers.common[\"Authorization\"] =\n  localStorage.getItem(\"TOKEN\"));\n\nexport const GetMessage = (props) => {\n  const { setMessage } = props;\n  axios\n    .get(SERVER_URL + \"/message/received\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then(\n      (res) => {\n        setMessage(res.data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const SendMessage = (props) => {\n  const { data, setMessage, email } = props;\n  axios\n    .post(SERVER_URL + `/message/${email}`, data)\n    .then((res) => {})\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const GetArticle = async (props) => {\n  const { data, setArticle } = props;\n\n  await axios\n    .get(SERVER_URL + \"/post/neople\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then(\n      (res) => {\n        setArticle(res.data);\n        console.log(res.data);\n      },\n      (err) => {\n        console.log(\"hi\");\n        console.log(err);\n      }\n    );\n};\n\nexport const GetUserInfo = async (props) => {\n  const { data, setUserData } = props;\n\n  await axios\n    .get(SERVER_URL + \"/user\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then(\n      (res) => {\n        setUserData(res.data);\n        console.log(res.data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const PutUserInfo = (props) => {\n  const { nickname, password } = props;\n\n  const formData = new FormData();\n  formData.append(\"nickname\", nickname);\n  formData.append(\"password\", password);\n\n  console.log(formData);\n\n  axios.put(SERVER_URL + \"/user\", formData).then(\n    (res) => {\n      console.log(res);\n    },\n    (err) => {\n      console.log(err);\n    }\n  );\n};\n\nexport const PostWriteArticle = (props) => {\n  const { data, articleData } = props;\n\n  const multiform = new FormData();\n\n  axios.post(SERVER_URL + \"/post/nexon\", articleData).then(\n    ((res) => {\n      //success\n    },\n    (err) => {\n      //faile\n    })\n  );\n};\n\nexport const PostCheckEmail = (props) => {\n  const { email, setDuplicateEmail } = props;\n\n  const form = new FormData();\n  form.append(\"email\", email);\n\n  axios\n    .post(SERVER_URL + \"/join/email\", form)\n    .then((res) => {\n      //success\n      setDuplicateEmail(false);\n    })\n    .catch((err) => {\n      //console.log(err);\n      setDuplicateEmail(true);\n    });\n};\n\nexport const PostCheckNickname = (props) => {\n  const { nickname, setDuplicateNick } = props;\n\n  const form = new FormData();\n  form.append(\"nickname\", nickname);\n\n  axios\n    .post(SERVER_URL + \"/join/nickname\", form)\n    .then((res) => {\n      //success\n      setDuplicateNick(false);\n    })\n    .catch((err) => {\n      //console.log(err);\n      setDuplicateNick(true);\n    });\n};\n\nexport const PostRegister = (props) => {\n  const { data, setResResult } = props;\n\n  const json = JSON.stringify({\n    username: data.username,\n    nickname: data.nickname,\n    password: data.password,\n    email: data.email,\n    region: data.region,\n  });\n  console.log(json);\n  axios\n    .post(SERVER_URL + \"/join\", json, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((res) => {\n      //success\n      setResResult(true);\n    })\n    .catch((err) => {\n      //console.log(err);\n      setResResult(false);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}