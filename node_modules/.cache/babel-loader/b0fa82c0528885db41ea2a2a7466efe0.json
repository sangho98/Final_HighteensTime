{"ast":null,"code":"import axios from \"axios\";\nimport { tokenData } from \"../Apollo\";\nimport Main from \"../screens/Main\";\nimport { SERVER_URL } from \"./URL\";\nexport const client = axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"TOKEN\")\n  }\n});\nexport const clientSet = axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"TOKEN\");\nexport const GetMessage = props => {\n  const {\n    data,\n    setMessage\n  } = props;\n  axios.get(SERVER_URL + \"/message/received\", data).then(res => {\n    setMessage(res.data);\n  }, err => {\n    console.log(err);\n  });\n};\n_c = GetMessage;\nexport const SendMessage = props => {\n  const {\n    data,\n    setMessage,\n    email\n  } = props;\n  axios.post(SERVER_URL + `/message/${email}`, data).then(res => {}, err => {\n    console.log(err);\n  });\n};\n_c2 = SendMessage;\nexport const GetArticle = async props => {\n  const {\n    data,\n    setArticle\n  } = props;\n  const headers = {\n    Authorization: tokenData()\n  };\n  console.log(headers);\n  await axios.get(SERVER_URL + \"/post/neople\", headers).then(res => {\n    setArticle(res.data);\n  }, err => {\n    console.log(\"hi\");\n    console.log(err);\n  });\n};\n_c3 = GetArticle;\nexport const GetUserInfo = async props => {\n  const {\n    data,\n    setUserData\n  } = props;\n  await axios.get(SERVER_URL + \"/user\", {\n    headers: {\n      Authorization: tokenData()\n    }\n  }).then(res => {\n    setUserData(res.data);\n    console.log(res.data);\n  }, err => {\n    console.log(err);\n  });\n};\n_c4 = GetUserInfo;\nexport const PutUserInfo = props => {\n  const {\n    nickname,\n    password\n  } = props;\n  const formData = new FormData();\n  formData.append(\"nickname\", nickname);\n  formData.append(\"password\", password);\n  console.log(formData);\n  axios.put(SERVER_URL + \"/user\", formData).then(res => {\n    console.log(res);\n    localStorage.setItem(\"PWD\", password);\n  }, err => {\n    console.log(err);\n  });\n};\n_c5 = PutUserInfo;\nexport const PostWriteArticle = props => {\n  const {\n    data,\n    articleData\n  } = props;\n  const multiform = new FormData();\n  axios.post(SERVER_URL + \"/post/nexon\", articleData).then((res => {//success\n  }, err => {//faile\n  }));\n};\n_c6 = PostWriteArticle;\nexport const PostCheckEmail = props => {\n  const {\n    email\n  } = props;\n  const data = {\n    email: email\n  };\n  console.log(data);\n  axios.post(SERVER_URL + \"/join/email\", data).then((res => {\n    //success\n    return true;\n  }, err => {\n    //failed\n    return false;\n  }));\n};\n_c7 = PostCheckEmail;\nexport const PostCheckNickname = props => {\n  const {\n    nickname\n  } = props;\n  const data = {\n    nickname: nickname\n  };\n  console.log(nickname);\n  axios.post(SERVER_URL + \"/join/nickname\", nickname).then((res => {\n    //success\n    return true;\n  }, err => {\n    //failed\n    return false;\n  }));\n};\n_c8 = PostCheckNickname;\nexport const PostRegister = props => {\n  const {\n    data\n  } = props;\n  const formData = new FormData();\n  formData.append(\"username\", data.username);\n  formData.append(\"password\", data.password);\n  formData.append(\"email\", data.email);\n  formData.append(\"nickname\", data.nickname);\n  formData.append(\"region\", data.region);\n  console.log(data);\n  axios.post(SERVER_URL + \"/join\", formData).then((res => {\n    //success\n    return true;\n  }, err => {\n    //failed\n    return false;\n  }));\n};\n_c9 = PostRegister;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"GetMessage\");\n$RefreshReg$(_c2, \"SendMessage\");\n$RefreshReg$(_c3, \"GetArticle\");\n$RefreshReg$(_c4, \"GetUserInfo\");\n$RefreshReg$(_c5, \"PutUserInfo\");\n$RefreshReg$(_c6, \"PostWriteArticle\");\n$RefreshReg$(_c7, \"PostCheckEmail\");\n$RefreshReg$(_c8, \"PostCheckNickname\");\n$RefreshReg$(_c9, \"PostRegister\");","map":{"version":3,"sources":["/Users/wk30815/Documents/Code/React/instagram/Final_HighteensTime/src/utils/ApiConfig.js"],"names":["axios","tokenData","Main","SERVER_URL","client","create","headers","Authorization","localStorage","getItem","clientSet","defaults","common","GetMessage","props","data","setMessage","get","then","res","err","console","log","SendMessage","email","post","GetArticle","setArticle","GetUserInfo","setUserData","PutUserInfo","nickname","password","formData","FormData","append","put","setItem","PostWriteArticle","articleData","multiform","PostCheckEmail","PostCheckNickname","PostRegister","username","region"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { tokenData } from \"../Apollo\";\nimport Main from \"../screens/Main\";\nimport { SERVER_URL } from \"./URL\";\n\nexport const client = axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"TOKEN\"),\n  },\n});\n\nexport const clientSet = (axios.defaults.headers.common[\"Authorization\"] =\n  localStorage.getItem(\"TOKEN\"));\n\nexport const GetMessage = (props) => {\n  const { data, setMessage } = props;\n  axios.get(SERVER_URL + \"/message/received\", data).then(\n    (res) => {\n      setMessage(res.data);\n    },\n    (err) => {\n      console.log(err);\n    }\n  );\n};\n\nexport const SendMessage = (props) => {\n  const { data, setMessage, email } = props;\n  axios.post(SERVER_URL + `/message/${email}`, data).then(\n    (res) => {},\n    (err) => {\n      console.log(err);\n    }\n  );\n};\n\nexport const GetArticle = async (props) => {\n  const { data, setArticle } = props;\n\n  const headers = {\n    Authorization: tokenData(),\n  };\n\n  console.log(headers);\n\n  await axios.get(SERVER_URL + \"/post/neople\", headers).then(\n    (res) => {\n      setArticle(res.data);\n    },\n    (err) => {\n      console.log(\"hi\");\n      console.log(err);\n    }\n  );\n};\n\nexport const GetUserInfo = async (props) => {\n  const { data, setUserData } = props;\n\n  await axios\n    .get(SERVER_URL + \"/user\", {\n      headers: {\n        Authorization: tokenData(),\n      },\n    })\n    .then(\n      (res) => {\n        setUserData(res.data);\n        console.log(res.data);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nexport const PutUserInfo = (props) => {\n  const { nickname, password } = props;\n\n  const formData = new FormData();\n  formData.append(\"nickname\", nickname);\n  formData.append(\"password\", password);\n\n  console.log(formData);\n\n  axios.put(SERVER_URL + \"/user\", formData).then(\n    (res) => {\n      console.log(res);\n      localStorage.setItem(\"PWD\", password);\n    },\n    (err) => {\n      console.log(err);\n    }\n  );\n};\n\nexport const PostWriteArticle = (props) => {\n  const { data, articleData } = props;\n\n  const multiform = new FormData();\n\n  axios.post(SERVER_URL + \"/post/nexon\", articleData).then(\n    ((res) => {\n      //success\n    },\n    (err) => {\n      //faile\n    })\n  );\n};\n\nexport const PostCheckEmail = (props) => {\n  const { email } = props;\n  const data = {\n    email: email,\n  };\n  console.log(data);\n  axios.post(SERVER_URL + \"/join/email\", data).then(\n    ((res) => {\n      //success\n      return true;\n    },\n    (err) => {\n      //failed\n      return false;\n    })\n  );\n};\n\nexport const PostCheckNickname = (props) => {\n  const { nickname } = props;\n  const data = {\n    nickname: nickname,\n  };\n  console.log(nickname);\n  axios.post(SERVER_URL + \"/join/nickname\", nickname).then(\n    ((res) => {\n      //success\n      return true;\n    },\n    (err) => {\n      //failed\n      return false;\n    })\n  );\n};\n\nexport const PostRegister = (props) => {\n  const { data } = props;\n\n  const formData = new FormData();\n\n  formData.append(\"username\", data.username);\n  formData.append(\"password\", data.password);\n  formData.append(\"email\", data.email);\n  formData.append(\"nickname\", data.nickname);\n  formData.append(\"region\", data.region);\n  console.log(data);\n  axios.post(SERVER_URL + \"/join\", formData).then(\n    ((res) => {\n      //success\n      return true;\n    },\n    (err) => {\n      //failed\n      return false;\n    })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}